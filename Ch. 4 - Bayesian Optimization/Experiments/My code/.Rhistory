hyperparams_EI = read.csv('C://Users//John//Desktop//Thesis//Ch. 4 - Bayesian Optimization//Experiments//My code//BayesOpt_Hyperparameters_keras_MNIST_EI.csv')
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
attach(hyperparams_EI)
l1_drop = scale(Dropout.in.layer.1)
l2_drop = scale(Dropout.in.layer.2)
l1_out = scale(Layer.1.size)
l2_out = scale(Layer.2.size)
batch_size = scale(Batch.size)
epochs =  scale(Epochs)
validation_split = scale(Validation.split)
loss = Loss
acc = Accuracy
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
am.glm = glm(formula=loss_m, family=binomial)
library("betareg")
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_model)
plot(resid(loss_model))
summary(loss_model)
# EI:
attach(hyperparams_EI)
l1_drop = scale(Dropout.in.layer.1)
l2_drop = scale(Dropout.in.layer.2)
l1_out = scale(Layer.1.size)
l2_out = scale(Layer.2.size)
batch_size = scale(Batch.size)
epochs =  scale(Epochs)
validation_split = scale(Validation.split)
loss = Loss
acc = Accuracy
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_model)
plot(resid(loss_model))
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_model)
summary(acc_model)
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_m)
summary(acc_model)
plot(resid(acc_model))
hyperparams_EI = read.csv('C://Users//John//Desktop//Thesis//Ch. 4 - Bayesian Optimization//Experiments//My code//BayesOpt_Hyperparameters_keras_MNIST_EI.csv')
hyperparams_MPI = read.csv('C://Users//John//Desktop//Thesis//Ch. 4 - Bayesian Optimization//Experiments//My code//BayesOpt_Hyperparameters_keras_MNIST_MPI.csv')
hyperparams_LCB = read.csv('C://Users//John//Desktop//Thesis//Ch. 4 - Bayesian Optimization//Experiments//My code//BayesOpt_Hyperparameters_keras_MNIST_LCB.csv')
# MPI:
attach(hyperparams_MPI)
l1_drop = scale(Dropout.in.layer.1)
l2_drop = scale(Dropout.in.layer.2)
l1_out = scale(Layer.1.size)
l2_out = scale(Layer.2.size)
batch_size = scale(Batch.size)
epochs =  scale(Epochs)
validation_split = scale(Validation.split)
loss = Loss
acc = Accuracy
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = lm(loss_m)
summary(loss_model)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = lm(acc_model)
summary(acc_m)
plot(resid(acc_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = lm(acc_m)
summary(acc_model)
plot(resid(acc_model))
# MPI:
attach(hyperparams_MPI)
l1_drop = scale(Dropout.in.layer.1)
l2_drop = scale(Dropout.in.layer.2)
l1_out = scale(Layer.1.size)
l2_out = scale(Layer.2.size)
batch_size = scale(Batch.size)
epochs =  scale(Epochs)
validation_split = scale(Validation.split)
loss = Loss
acc = Accuracy
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = lm(loss_m)
summary(loss_model)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = lm(acc_m)
summary(acc_model)
plot(resid(acc_model))
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_model)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_m)
summary(acc_model)
plot(resid(acc_model))
# LCB:
attach(hyperparams_LCB)
l1_drop = scale(Dropout.in.layer.1)
l2_drop = scale(Dropout.in.layer.2)
l1_out = scale(Layer.1.size)
l2_out = scale(Layer.2.size)
batch_size = scale(Batch.size)
epochs =  scale(Epochs)
validation_split = scale(Validation.split)
loss = Loss
acc = Accuracy
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_m)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_m)
summary(acc_model)
plot(resid(acc_model))
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_m)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_m)
summary(acc_model)
plot(resid(acc_model))
# ANOVA-style regression using logistic regression
# loss model
loss_m = loss ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
loss_model = betareg(loss_m)
summary(loss_model)
plot(resid(loss_model))
# accuracy model
acc_m = acc ~ l1_drop + l2_drop + l1_out + l2_out + batch_size + validation_split
acc_model = betareg(acc_m)
summary(acc_model)
plot(resid(acc_model))
