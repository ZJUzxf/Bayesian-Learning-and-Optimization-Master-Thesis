#scatterplot matrix
scatterplotMatrix(david.sample[2:11], col='red', main="Scatterplot Matrix, 1671")
# generosity, corruption, and gini may need transformations
plot(Corruption, Ladder, main= "Residuals, 1671")
plot(density(Corruption)) # skewed left,
plot(density((Corruption)^2))
plot(Corruption^2, Ladder)
par(mfrow=c(2,2))
plot(gini, Ladder, main="Residuals, 1671")
plot(density(gini))
plot(density(log(gini)))
plot(log(gini), Ladder)
names(david.sample)
#disregard country
quadraticCorruption = Corruption^2
logGini = log(gini)
model = Ladder ~ LogGDP + Social + HLE + Freedom + Generosity + quadraticCorruption + Positive + Negative + logGini
mlr=lm(model)
summary(mlr)
Country
country
countries_sampled = countries
david.data = read.csv('happiness2017.csv')
attach(david.data)
#take a random sample of n_countries:
n_countries = 100
set.seed(1671)
library("dplyr")
david.sample=sample_n(david.data, n_countries)
countries_sampled = countries
countries_sampled = country
countries_sampled
countries_sampled = david.sample$country
countries_sampled
male_max_vol = c(23, 36, 56, 42, 28, 31, 62, 19, 21, 25,
38, 36, 22, 51, 69, 25, 33, 38, 29, 25,
22, 24, 37, 44, 42, 33, 31, 38, 36, 39)
female_max_vol = c(18, 36, 23, 45, 61, 19, 21, 23, 33, 36,
45, 36, 38, 44, 49, 52, 53, 48, 23, 16,
33, 39, 25, 29, 29, 41, 60, 33, 39, 20)
all_max_vol = male_max_vol + female_max_vol
all_max_vol = c(male_max_vol, female_max_vol)
all_max_vol
mean(male_max_vol)
median(male_max_vol)
mode(male_max_vol)
getmode(male_max_vol)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(male_max_vol)
sd(male_max_vol)
mean(female_max_vol)
median(female_max_vol)
getmode(female_max_vol)
sd(female_max_vol)
#for men:
mean(male_max_vol)
median(male_max_vol)
getmode(male_max_vol)
sd(male_max_vol)
#for women
mean(female_max_vol)
median(female_max_vol)
getmode(female_max_vol)
sd(female_max_vol)
#for both
mean(all_max_vol)
median(all_max_vol)
getmode(all_max_vol)
sd(all_max_vol)
results = read.table('result_dataframe.csv', header=TRUE)
getpwd()
getcwd()
cwd()
getwd()
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd()
setwd(directory)
results = read.table('result_dataframe.csv', header=TRUE)
results = read.table('result_dataframe.csv',sep='', header=TRUE)
results = read.table('result_dataframe.csv',fill=TRUE, header=TRUE)
results
results = read.table('Book1.csv',fill=TRUE, header=TRUE)
results
results = read.table('result_dataframe.csv',fill=TRUE, header=TRUE)
results = read.table('result_dataframe.csv', header=TRUE)
results = read.table('result_dataframe.csv')
results = read.table('result_dataframe.csv')
results = read.table('result_dataframe.csv', header =TRUE)
results = read.csv('result_dataframe.csv', header = TRUE)
results
attach(results)
names(results)
corr(results)
corr.matrix(results)
cor(results)
install.packages("corrplot")
results = results[-"Model.Number"]
results = results[-c("Model.Number")]
results = results[-c(1)]
results
library(corrplot)
corrplot(results, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
names(results)
plot(Test.Accuracy, Occam.factor..FC., main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Aleatoric", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Aleatoric", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on filter weight",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Occam.factor..FC., main="Occam factor based on filter weight vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
results
results = read.csv('result_dataframe.csv', header = TRUE)
results = read.csv('result_dataframe.csv', header = TRUE)
results = read.csv('result_dataframe.csv', header = TRUE)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
install.packages("corrplot")
library(corrplot)
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on filter weight",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Occam.factor..FC., main="Occam factor based on filter weight vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
install.packages("corrplot")
library(corrplot)
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
results = read.csv('result_dataframe.csv', header = TRUE)
attach(results)
names(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on filter weight",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Occam.factor..FC., main="Occam factor based on filter weight vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
results = results[-c(1)] #exclude model number
library(corrplot)
cor_matrix = cor(results)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on filter weight",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Occam.factor..FC., main="Occam factor based on filter weight vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
cor_matrix = cor(results)
cor_matrix
File <- "./img/corr_matrix.png"
dir.create(dirname(File), showWarnings = FALSE)
png(File)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
dev.off()
File <- "./img/test_accuracy_vs_FC_occam.png"
dir.create(dirname(File), showWarnings = FALSE)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
png(File)
dev.off()
File <- "./img/test_accuracy_vs_FC_occam.png"
dir.create(dirname(File), showWarnings = FALSE)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
png(File)
dev.off()
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Test.Accuracy, Occam.factor..FC., main="Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
plot(Test.Accuracy, Occam.factor..Filter., main="Test Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on FC weight",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..FC., Test.Accuracy, main="Occam Factor based on FC weight vs. Test Accuracy",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Test Accuracy vs. Occam Factor based on filter weight",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Test.Accuracy, main="Occam Factor based on filter weight vs. Test Accuracy",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
plot(Occam.factor..Filter., Occam.factor..FC., main="Occam factor based on filter weight vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
File <- "./img/test_accuracy_vs_FC_occam.png"
dir.create(dirname(File), showWarnings = FALSE)
plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
png(File)
dev.off()
File <- "./img/test_accuracy_vs_FC_occam.png"
dir.create(dirname(File), showWarnings = FALSE)
image.plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
png(File)
dev.off()
png('test_accuracy_vs_FC_occam.png')
plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
File <- "./img/test_accuracy_vs_FC_occam.png"
png(File)
plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
File <- "./img/test_accuracy_vs_filter_occam.png"
png(File)
plot(Test.Accuracy, Occam.factor..Filter., main="Test Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
dev.off()
File <- "./img/avg_aleatoric_vs_avg_epistemic.png"
png(File)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_epistemic.png"
png(File)
plot(Occam.factor..FC., Avg..Epistemic, main="Occam Factor based on FC weight vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
dev.off()
# Examining a relationship between the performance metrics and the Occam factor
# of a Bayesian LeNet-5.
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
#install.packages("corrplot")
#library(corrplot)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
File <- "./img/corr_matrix.png"
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
png(File)
dev.off()
#scatter plots... to check if any relationships are NOT linear:
File <- "./img/test_accuracy_vs_FC_occam.png"
png(File)
plot(Test.Accuracy, Occam.factor..FC., main="Test Accuracy vs. FC Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
File <- "./img/test_accuracy_vs_filter_occam.png"
png(File)
plot(Test.Accuracy, Occam.factor..Filter., main="Test Accuracy vs. Filter Occam Factor",
xlab="Test Accuracy ", ylab="Occam Factor based on filter weight", pch=19)
dev.off()
File <- "./img/avg_aleatoric_vs_avg_epistemic.png"
png(File)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_epistemic.png"
png(File)
plot(Occam.factor..FC., Avg..Epistemic, main="FC Occam Factor vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..FC., Test.Accuracy, main="FC Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..Filter., Test.Accuracy, main="Filter Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_FC_occam.png"
png(File)
plot(Occam.factor..Filter., Occam.factor..FC., main="Filter Occam Factor vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
File <- "./img/corr_matrix.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
dev.off()
File <- "./img/corr_matrix_numbers.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, method="number")
dev.off()
# Examining a relationship between the performance metrics and the Occam factor
# of a Bayesian LeNet-5.
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
#install.packages("corrplot")
#library(corrplot)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
File <- "./img/corr_matrix.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
corrplot(cor_matrix, method="number")
dev.off()
File <- "./img/corr_matrix_numbers.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, method="number")
dev.off()
#scatter plots... to check if any relationships are NOT linear:
File <- "./img/avg_aleatoric_vs_avg_epistemic.png"
png(File)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_epistemic.png"
png(File)
plot(Occam.factor..FC., Avg..Epistemic, main="FC Occam Factor vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_aleatoric.png"
png(File)
plot(Occam.factor..FC., Avg..Aleatoric, main="FC Occam Factor vs. Avg. Aleatoric",
xlab="Occam Factor based on FC weight", ylab="Avg. Aleatoric", pch=19)
dev.off()
File <- "./img/FC_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..FC., Test.Accuracy, main="FC Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..Filter., Test.Accuracy, main="Filter Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_FC_occam.png"
png(File)
plot(Occam.factor..Filter., Occam.factor..FC., main="Filter Occam Factor vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
#File <- "./img/FC_occam_vs_test_accuracy.png"
#png(File)
#plot(Occam.factor..FC., Test.Accuracy, main="FC Occam Factor vs. Test Accuracy",
#     xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
#dev.off()
library(corrplot)
# Examining a relationship between the performance metrics and the Occam factor
# of a Bayesian LeNet-5.
directory = "C:/Users/John/Desktop/Thesis/Ch. 3 -Bayesian deep learning/Experiments/3.2/"
setwd(directory)
results = read.csv('result_dataframe.csv', header = TRUE)
#install.packages("corrplot")
library(corrplot)
attach(results)
names(results)
results = results[-c(1)] #exclude model number
File <- "./img/corr_matrix.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
corrplot(cor_matrix, method="number")
dev.off()
File <- "./img/corr_matrix_numbers.png"
png(File)
dir.create(dirname(File), showWarnings = FALSE)
cor_matrix = cor(results)
cor_matrix
corrplot(cor_matrix, method="number")
dev.off()
#scatter plots... to check if any relationships are NOT linear:
File <- "./img/avg_aleatoric_vs_avg_epistemic.png"
png(File)
plot(Avg..Aleatoric, Avg..Epistemic, main="Avg. Aleatoric vs. Avg. Epistemic",
xlab="Avg. Aleatoric ", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_epistemic.png"
png(File)
plot(Occam.factor..FC., Avg..Epistemic, main="FC Occam Factor vs. Avg. Epistemic",
xlab="Occam Factor based on FC weight", ylab="Avg. Epistemic", pch=19)
dev.off()
File <- "./img/FC_occam_vs_avg_aleatoric.png"
png(File)
plot(Occam.factor..FC., Avg..Aleatoric, main="FC Occam Factor vs. Avg. Aleatoric",
xlab="Occam Factor based on FC weight", ylab="Avg. Aleatoric", pch=19)
dev.off()
File <- "./img/FC_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..FC., Test.Accuracy, main="FC Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_test_accuracy.png"
png(File)
plot(Occam.factor..Filter., Test.Accuracy, main="Filter Occam Factor vs. Test Accuracy",
xlab="Occam Factor based on Filter weight ", ylab="Test Accuracy", pch=19)
dev.off()
File <- "./img/Filter_occam_vs_FC_occam.png"
png(File)
plot(Occam.factor..Filter., Occam.factor..FC., main="Filter Occam Factor vs. Occam Factor based on FC weight",
xlab="Occam Factor based on filter weight ", ylab="Occam Factor based on FC weight", pch=19)
dev.off()
#File <- "./img/FC_occam_vs_test_accuracy.png"
#png(File)
#plot(Occam.factor..FC., Test.Accuracy, main="FC Occam Factor vs. Test Accuracy",
#     xlab="Occam Factor based on FC weight ", ylab="Test Accuracy", pch=19)
#dev.off()
